@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --md-sys-color-primary: theme('colors.primary.DEFAULT');
    --md-sys-color-on-primary: theme('colors.on-primary.DEFAULT');
    --md-sys-color-primary-container: theme('colors.primary-container.DEFAULT');
    --md-sys-color-on-primary-container: theme('colors.on-primary-container.DEFAULT');

    --md-sys-color-secondary: theme('colors.secondary.DEFAULT');
    --md-sys-color-on-secondary: theme('colors.on-secondary.DEFAULT');
    --md-sys-color-secondary-container: theme('colors.secondary-container.DEFAULT');
    --md-sys-color-on-secondary-container: theme('colors.on-secondary-container.DEFAULT');

    --md-sys-color-tertiary: theme('colors.tertiary.DEFAULT');
    --md-sys-color-on-tertiary: theme('colors.on-tertiary.DEFAULT');
    --md-sys-color-tertiary-container: theme('colors.tertiary-container.DEFAULT');
    --md-sys-color-on-tertiary-container: theme('colors.on-tertiary-container.DEFAULT');

    --md-sys-color-error: theme('colors.error.DEFAULT');
    --md-sys-color-on-error: theme('colors.on-error.DEFAULT');
    --md-sys-color-error-container: theme('colors.error-container.DEFAULT');
    --md-sys-color-on-error-container: theme('colors.on-error-container.DEFAULT');

    --md-sys-color-surface: theme('colors.surface.DEFAULT');
    --md-sys-color-on-surface: theme('colors.on-surface.DEFAULT');
    --md-sys-color-surface-variant: theme('colors.surface-variant.DEFAULT');
    --md-sys-color-on-surface-variant: theme('colors.on-surface-variant.DEFAULT');

    --md-sys-color-outline: theme('colors.outline.DEFAULT');
    --md-sys-color-outline-variant: theme('colors.outline-variant.DEFAULT');
  }

  html.dark {
    --md-sys-color-primary: theme('colors.primary.dark');
    --md-sys-color-on-primary: theme('colors.on-primary.dark');
    --md-sys-color-primary-container: theme('colors.primary-container.dark');
    --md-sys-color-on-primary-container: theme('colors.on-primary-container.dark');

    --md-sys-color-secondary: theme('colors.secondary.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-on-secondary: theme('colors.on-secondary.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-secondary-container: theme('colors.secondary-container.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-on-secondary-container: theme('colors.on-secondary-container.dark'); /* TODO: Define dark mode colors */

    --md-sys-color-tertiary: theme('colors.tertiary.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-on-tertiary: theme('colors.on-tertiary.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-tertiary-container: theme('colors.tertiary-container.dark'); /* TODO: Define dark mode colors */
    --md-sys-color-on-tertiary-container: theme('colors.on-tertiary-container.dark'); /* TODO: Define dark mode colors */

    --md-sys-color-error: theme('colors.error.dark');
    --md-sys-color-on-error: theme('colors.on-error.dark');
    --md-sys-color-error-container: theme('colors.error-container.dark');
    --md-sys-color-on-error-container: theme('colors.on-error-container.dark');

    --md-sys-color-surface: theme('colors.surface.dark');
    --md-sys-color-on-surface: theme('colors.on-surface.dark');
    --md-sys-color-surface-variant: theme('colors.surface-variant.dark');
    --md-sys-color-on-surface-variant: theme('colors.on-surface-variant.dark');

    --md-sys-color-outline: theme('colors.outline.dark');
    --md-sys-color-outline-variant: theme('colors.outline-variant.dark'); /* TODO: Define dark mode colors */
  }
}

@layer components {
  .card {
    @apply bg-surface dark:bg-surface-dark rounded-md-large p-6 border border-outline dark:border-outline-dark relative overflow-hidden;
  }

  .btn {
    @apply inline-flex items-center justify-center gap-2 px-6 h-10 border-none rounded-md-medium text-sm font-medium cursor-pointer transition-all duration-200 ease-in-out relative overflow-hidden whitespace-nowrap shrink-0;
    /* Add base hover/active state layer effect using ::before */
    &::before {
      content: '';
      @apply absolute inset-0 bg-current opacity-0 transition-opacity duration-200 ease-in-out;
    }
    &:hover::before {
      /* Using a fixed opacity value, ideally this would come from a CSS variable mapped in tailwind.config */
      @apply opacity-10;
    }
    &:active::before {
       @apply opacity-20; /* Slightly higher opacity for pressed state */
    }
  }

  .btn-filled {
    @apply inline-flex items-center justify-center gap-2 px-6 h-10 border-none rounded-md-medium text-sm font-medium cursor-pointer transition-all duration-200 ease-in-out relative overflow-hidden whitespace-nowrap shrink-0;
    @apply bg-primary dark:bg-primary-dark text-on-primary dark:text-on-primary-dark;
    /* Adding a subtle hover/active effect as an approximation of the state layer */
    @apply hover:opacity-90 active:opacity-80;
  }

  .btn-tonal {
    @apply inline-flex items-center justify-center gap-2 px-6 h-10 border-none rounded-md-medium text-sm font-medium cursor-pointer transition-all duration-200 ease-in-out relative overflow-hidden whitespace-nowrap shrink-0;
    @apply bg-secondary-container dark:bg-secondary-container-dark text-on-secondary-container dark:text-on-secondary-container-dark;
    /* Adding a subtle hover/active effect */
    @apply hover:opacity-90 active:opacity-80;
  }
  
  .btn-tertiary {
    @apply inline-flex items-center justify-center gap-2 px-6 h-10 border-none rounded-md-medium text-sm font-medium cursor-pointer transition-all duration-200 ease-in-out relative overflow-hidden whitespace-nowrap shrink-0;
    @apply bg-tertiary-container dark:bg-tertiary-container-dark text-on-tertiary-container dark:text-on-tertiary-container-dark;
    @apply hover:opacity-90 active:opacity-80;
  }

  .btn-error {
    @apply inline-flex items-center justify-center gap-2 px-6 h-10 border-none rounded-md-medium text-sm font-medium cursor-pointer transition-all duration-200 ease-in-out relative overflow-hidden whitespace-nowrap shrink-0;
    @apply bg-error dark:bg-error-dark text-on-error dark:text-on-error-dark;
    @apply hover:opacity-90 active:opacity-80;
  }

  .btn-toggle-expand {
    /* Applying necessary utility classes from .btn and specific styles */
    @apply inline-flex cursor-pointer relative overflow-hidden whitespace-nowrap shrink-0 transition-all duration-200 ease-in-out;
    @apply bg-secondary-container dark:bg-secondary-container-dark text-on-secondary-container dark:text-on-secondary-container-dark p-2 h-9 min-w-[36px] rounded-md-small flex items-center justify-center;
    /* Adding a subtle hover/active effect */
    @apply hover:opacity-90 active:opacity-80;
  }

  .text-field {
    @apply relative flex-1 min-w-0 w-full;
  }

  .text-field-input {
    @apply w-full px-4 py-3 border border-outline dark:border-outline-dark rounded-md-small bg-transparent text-base text-on-surface dark:text-on-surface-dark transition-colors duration-200 ease-in-out box-border placeholder-transparent;
    @apply focus:outline-none focus:border-primary dark:focus:border-primary-dark;
    box-sizing: border-box; /* Ensure padding doesn't cause overflow */
  }

  .text-field-label {
    @apply absolute left-4 top-1/2 transform -translate-y-1/2 text-on-surface-variant dark:text-on-surface-variant-dark transition-all duration-200 ease-in-out bg-surface dark:bg-surface-dark px-1 pointer-events-none;
    /* Label floats up when input is focused or has content, remaining left-aligned */
    @apply peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:scale-90 peer-focus:text-primary dark:peer-focus:text-primary-dark;
    @apply peer-[&:not(:placeholder-shown)]:top-0 peer-[&:not(:placeholder-shown)]:-translate-y-1/2 peer-[&:not(:placeholder-shown)]:scale-90 peer-[&:not(:placeholder-shown)]:text-primary dark:peer-[&:not(:placeholder-shown)]:text-primary-dark;
  }

  .text-field-input:focus {
    @apply outline-none border-primary dark:border-primary-dark;
  }

  .section-header-title {
    @apply text-lg font-medium text-on-surface dark:text-on-surface-dark;
  }

  .task-item {
    @apply flex items-center justify-between p-3 bg-secondary-container dark:bg-secondary-container-dark rounded-md-small cursor-pointer text-on-secondary-container dark:text-on-secondary-container-dark transition-all duration-150 ease-in-out border border-transparent box-border;
    /* Simulating state layer with opacity */
    @apply hover:bg-opacity-80 dark:hover:bg-opacity-80;
  }
  .task-item span {
    @apply overflow-hidden text-ellipsis whitespace-nowrap flex-1 text-on-surface dark:text-on-surface-dark;
  }
  .task-item.active {
    @apply bg-primary-container dark:bg-primary-container-dark text-on-primary-container dark:text-on-primary-container-dark;
  }
  .task-item .delete-button {
    /* Mobile first: visible, larger tap target */
    @apply inline-flex items-center justify-center p-2
            opacity-0 transition-opacity duration-200 ease-in-out
            bg-transparent text-on-secondary-container dark:text-on-secondary-container-dark
            border-none cursor-pointer relative overflow-hidden;
    /* Desktop overrides: hidden by default, aim for ~40px clickable area, icon ~20px */
    @apply md:opacity-0 md:h-10 md:px-6 rounded-md-small; /* Larger: 40px container, 8px padding -> 24px icon space */

    /* Add state layer effect using ::before, inherited from the concept of .btn but defined here */
    &::before {
      content: '';
      @apply absolute inset-0 bg-current opacity-0 transition-opacity duration-200 ease-in-out rounded-md-small; /* Apply rounded corners to the pseudo-element as well */
    }
    &:hover::before {
      @apply opacity-10;
    }
    &:active::before {
      @apply opacity-20;
    }
  }
  .task-item .delete-button .material-symbols-rounded {
    @apply text-xl; /* Explicitly 24px, can be 20px if preferred via text-lg */
  }
  .task-item:hover .delete-button {
    @apply opacity-100;
  }

  .metric-item-container {
    @apply p-4 bg-secondary-container dark:bg-secondary-container-dark rounded-md-small text-sm text-on-secondary-container dark:text-on-secondary-container-dark relative overflow-hidden;
  }
  /* For the progress bar, JS will need to set the width via style="width: var(--progress)" on this element */
  .metric-item-progress-bar {
    @apply absolute top-0 left-0 h-full opacity-10 z-0;
    transition: width 0.3s ease-in-out;
    background-color: var(--bar-color, theme('colors.primary.DEFAULT'));
    width: var(--progress, 0%);
  }
  .metric-item-content {
    @apply relative z-10;
  }

  .log-entry {
    @apply flex items-center gap-2 p-2.5 bg-secondary-container dark:bg-secondary-container-dark rounded-md-small text-sm text-on-surface dark:text-on-surface-dark;
  }
  .log-entry .material-symbols-rounded {
    @apply text-lg;
  }

  .task-chip {
    @apply inline-flex flex-none items-center gap-2 h-8 px-4 bg-transparent text-on-surface dark:text-on-surface-dark border border-outline dark:border-outline-dark rounded-md-small cursor-pointer transition-all duration-200 ease-in-out whitespace-nowrap text-sm relative overflow-visible select-none outline-none box-border;
    @apply hover:border-on-surface dark:hover:border-on-surface-dark hover:opacity-90;
  }
  .task-chip.active {
    @apply bg-secondary-container dark:bg-secondary-container-dark text-on-secondary-container dark:text-on-secondary-container-dark border-transparent;
  }
  .task-chip .chip-content {
    @apply flex items-center justify-start gap-2 w-full h-full;
  }
  .task-chip .chip-text {
    @apply leading-none; /* Try to align text better with icons */
  }
  .task-chip .material-symbols-rounded {
    /* Make icon size match chip text size for better alignment */
    @apply text-sm leading-none;
  }
  .task-chip .check-icon {
    @apply ml-auto;
  }

  .fullscreen-mode {
    @apply hidden; /* Default to hidden */
  }
  .fullscreen-mode.active {
    @apply flex; /* Or 'block', depending on desired layout. 'flex' was on the HTML element */
  }

  .notification-status {
    @apply p-3 rounded-md-small bg-secondary-container dark:bg-secondary-container-dark flex items-center gap-2 text-sm text-on-secondary-container dark:text-on-secondary-container-dark;
  }
  .notification-status .material-symbols-rounded {
    @apply text-xl;
  }
  .notification-status a {
    @apply text-primary dark:text-primary-dark no-underline hover:underline;
  }
  .notification-status.warning {
    @apply bg-error-container dark:bg-error-container-dark text-on-error-container dark:text-on-error-container-dark;
  }

  /* Example for no-data-message if needed for specific styling */
  /* .no-data-message {
    @apply text-center text-on-secondary-container dark:text-on-secondary-container-dark py-4 text-sm;
  } */

  /* Collapsible section styles */
  /* Heatmap Section */
  #heatmapSection.collapsed .heatmap-scroll-container {
    @apply h-0 opacity-0;
  }
  #heatmapSection .btn-toggle-expand .material-symbols-rounded {
    @apply transition-transform duration-300 ease-in-out; /* Ensure transition is applied */
  }
  #heatmapSection.collapsed .btn-toggle-expand .material-symbols-rounded {
    @apply rotate-180;
  }

  /* History Log Section */
  #historySection #log-scroll-container {
    @apply overflow-hidden max-h-[800px];
    transition: max-height 0.5s ease-in-out, opacity 0.2s ease-out;
  }
  #historySection.collapsed #log-scroll-container {
    @apply max-h-0 opacity-0; /* Opacity can still transition if transition-all was on parent, or add transition-opacity here if needed */
    /* For smoother collapse, ensure padding/margin also transition or are removed */
    @apply p-0 m-0; /* Apply p-0 and m-0 for Tailwind equivalent of padding:0 and margin:0 */
  }
  #historySection.collapsed #log-scroll-container #historyLog {
    @apply mt-0;
  }
   #historySection .btn-toggle-expand .material-symbols-rounded {
    @apply transition-transform duration-300 ease-in-out; /* Ensure transition is applied */
  }
  #historySection.collapsed .btn-toggle-expand .material-symbols-rounded {
    @apply rotate-180;
  }

  .section-header {
    @apply flex justify-between items-center mb-4;
  }

  .setting-item {
    @apply flex flex-col gap-3 p-4 bg-secondary-container dark:bg-secondary-container-dark rounded-md-small;
  }

  .setting-item-header {
    @apply flex justify-between items-center gap-3;
  }

  .time-input {
    @apply grid grid-cols-[auto_1fr] items-center gap-2 max-w-[200px];
  }

  .time-input input {
    @apply w-full max-w-[72px] px-3 py-2 border border-outline dark:border-outline-dark rounded-md-small bg-transparent text-base text-on-surface dark:text-on-surface-dark focus:outline-none focus:border-primary dark:focus:border-primary-dark;
  }

  .time-input .unit {
    @apply text-on-secondary-container dark:text-on-secondary-container-dark whitespace-nowrap min-w-[32px] text-left pl-1;
  }

  /* Migrate inline-notification styles */
  .inline-notification {
    @apply fixed bottom-6 right-6 p-4 bg-surface dark:bg-surface-dark text-on-surface dark:text-on-surface-dark rounded-md-medium shadow-md flex items-start gap-3 z-[1000] min-w-[280px] max-w-md;
    animation: slide-in 0.3s ease-out;
  }

  .inline-notification.fade-out {
    animation: fade-out 0.3s ease-out forwards;
  }

  .inline-notification .material-symbols-rounded {
    @apply text-primary dark:text-primary-dark text-2xl;
  }

  .inline-notification .notification-content {
    @apply flex-1;
  }

  .inline-notification .notification-content strong {
    @apply block mb-1 text-on-surface dark:text-on-surface-dark;
  }

  .inline-notification .notification-content p {
    @apply m-0 text-sm text-on-secondary-container dark:text-on-secondary-container-dark;
  }
}

@layer utilities {
  /* Custom utility for scrollbar */
  .scrollbar-custom::-webkit-scrollbar {
    width: 8px;
  }
  .scrollbar-custom::-webkit-scrollbar-track {
    background: theme('colors.secondary-container.DEFAULT');
    border-radius: 4px;
  }
  .scrollbar-custom::-webkit-scrollbar-thumb {
    background: theme('colors.outline.DEFAULT');
    border-radius: 4px;
  }
  .scrollbar-custom::-webkit-scrollbar-thumb:hover {
    background: theme('colors.primary.DEFAULT');
  }

  .dark .scrollbar-custom::-webkit-scrollbar-track {
    background: theme('colors.secondary-container.dark');
  }

  .dark .scrollbar-custom::-webkit-scrollbar-thumb {
    background: theme('colors.outline.dark');
  }

   .dark .scrollbar-custom::-webkit-scrollbar-thumb:hover {
    background: theme('colors.primary.dark');
  }
}

/* Add keyframes for animations */
@keyframes slide-in {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

/* Theme selection styles */
@layer components {
  .theme-option {
    @apply transition-all duration-200 cursor-pointer border-2 border-transparent;
  }

  .theme-option:hover {
    @apply scale-105 shadow-sm;
  }

  .theme-option.selected {
    @apply border-primary dark:border-primary-dark bg-primary-container dark:bg-primary-container-dark;
  }

  .theme-option.selected span {
    @apply text-on-primary-container dark:text-on-primary-container-dark font-medium;
  }

  /* Theme mode switch additional styles */
  .switch input:checked + .slider {
    @apply bg-primary dark:bg-primary-dark border-primary dark:border-primary-dark;
  }

  .switch input:checked + .slider:before {
    @apply bg-on-primary dark:bg-on-primary-dark;
  }
}
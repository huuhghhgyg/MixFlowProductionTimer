*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Google Sans Text, system-ui, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root {
  --md-sys-color-primary: #B95E20;
  --md-sys-color-on-primary: #FFFFFF;
  --md-sys-color-primary-container: #FFDBCA;
  --md-sys-color-on-primary-container: #3A1800;
  --md-sys-color-secondary: #A08C7D;
  --md-sys-color-on-secondary: #FFFFFF;
  --md-sys-color-secondary-container: #FFDBCA;
  --md-sys-color-on-secondary-container: #2C160A;
  --md-sys-color-tertiary: #705D50;
  --md-sys-color-on-tertiary: #FFFFFF;
  --md-sys-color-tertiary-container: #FFDBCA;
  --md-sys-color-on-tertiary-container: #291807;
  --md-sys-color-error: #B3261E;
  --md-sys-color-on-error: #FFFFFF;
  --md-sys-color-error-container: #F9DEDC;
  --md-sys-color-on-error-container: #410E0B;
  --md-sys-color-surface: #FFF8F6;
  --md-sys-color-on-surface: #201A18;
  --md-sys-color-surface-variant: #F4DED4;
  --md-sys-color-on-surface-variant: #52443D;
  --md-sys-color-outline: #85746B;
  --md-sys-color-outline-variant: #D7C2B9;
  /* TODO: Add state layer opacity variables if needed for effects like hover/pressed */
  /* TODO: Add elevation variables if needed for shadows */
}

html.dark {
  --md-sys-color-primary: #F97316;
  --md-sys-color-on-primary: #000000;
  --md-sys-color-primary-container: #7C2D03;
  --md-sys-color-on-primary-container: #FFEDD5;
  --md-sys-color-secondary: #A08C7D;
  /* TODO: Define dark mode colors */
  --md-sys-color-on-secondary: #FFFFFF;
  /* TODO: Define dark mode colors */
  --md-sys-color-secondary-container: #FFDBCA;
  /* TODO: Define dark mode colors */
  --md-sys-color-on-secondary-container: #2C160A;
  /* TODO: Define dark mode colors */
  --md-sys-color-tertiary: #705D50;
  /* TODO: Define dark mode colors */
  --md-sys-color-on-tertiary: #FFFFFF;
  /* TODO: Define dark mode colors */
  --md-sys-color-tertiary-container: #FFDBCA;
  /* TODO: Define dark mode colors */
  --md-sys-color-on-tertiary-container: #291807;
  /* TODO: Define dark mode colors */
  --md-sys-color-error: #EF4444;
  --md-sys-color-on-error: #F3F4F6;
  --md-sys-color-error-container: #7F1D1D;
  --md-sys-color-on-error-container: #410E0B;
  --md-sys-color-surface: #1F2937;
  --md-sys-color-on-surface: #F3F4F6;
  --md-sys-color-surface-variant: #374151;
  --md-sys-color-on-surface-variant: #E5E7EB;
  --md-sys-color-outline: #4B5563;
  --md-sys-color-outline-variant: #D7C2B9;
  /* TODO: Define dark mode colors */
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.card {
  position: relative;
  overflow: hidden;
  border-radius: 16px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(133 116 107 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(255 248 246 / var(--tw-bg-opacity, 1));
  padding: 1.5rem;
}

@media (prefers-color-scheme: dark) {
  .card {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
  }
}

.btn-filled {
  position: relative;
  display: inline-flex;
  height: 2.5rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 12px;
  border-style: none;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: rgb(185 94 32 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .btn-filled {
    --tw-bg-opacity: 1;
    background-color: rgb(249 115 22 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity, 1));
  }
}

.btn-filled {
  /* Adding a subtle hover/active effect as an approximation of the state layer */
}

.btn-filled:hover {
  opacity: 0.9;
}

.btn-filled:active {
  opacity: 0.8;
}

.btn-tonal {
  position: relative;
  display: inline-flex;
  height: 2.5rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 12px;
  border-style: none;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .btn-tonal {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.btn-tonal {
  /* Adding a subtle hover/active effect */
}

.btn-tonal:hover {
  opacity: 0.9;
}

.btn-tonal:active {
  opacity: 0.8;
}

.btn-severe {
  position: relative;
  display: inline-flex;
  height: 2.5rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 12px;
  border-style: none;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: rgb(249 222 220 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(65 14 11 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .btn-severe {
    --tw-bg-opacity: 1;
    background-color: rgb(127 29 29 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(65 14 11 / var(--tw-text-opacity, 1));
  }
}

.btn-severe:hover {
  opacity: 0.9;
}

.btn-severe:active {
  opacity: 0.8;
}

.btn-error {
  position: relative;
  display: inline-flex;
  height: 2.5rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 12px;
  border-style: none;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: rgb(179 38 30 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .btn-error {
    --tw-bg-opacity: 1;
    background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.btn-error:hover {
  opacity: 0.9;
}

.btn-error:active {
  opacity: 0.8;
}

.btn-toggle-expand {
  /* Applying necessary utility classes from .btn and specific styles */
  position: relative;
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  overflow: hidden;
  white-space: nowrap;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  height: 2.25rem;
  min-width: 36px;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .btn-toggle-expand {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.btn-toggle-expand {
  /* Adding a subtle hover/active effect */
}

.btn-toggle-expand:hover {
  opacity: 0.9;
}

.btn-toggle-expand:active {
  opacity: 0.8;
}

.text-field {
  position: relative;
  width: 100%;
  min-width: 0px;
  flex: 1 1 0%;
}

.text-field-input {
  box-sizing: border-box;
  width: 100%;
  border-radius: 8px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(133 116 107 / var(--tw-border-opacity, 1));
  background-color: transparent;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

.text-field-input::-moz-placeholder {
  color: transparent;
}

.text-field-input::placeholder {
  color: transparent;
}

.text-field-input {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (prefers-color-scheme: dark) {
  .text-field-input {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.text-field-input:focus {
  --tw-border-opacity: 1;
  border-color: rgb(185 94 32 / var(--tw-border-opacity, 1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (prefers-color-scheme: dark) {
  .text-field-input:focus {
    --tw-border-opacity: 1;
    border-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
  }
}

.text-field-input {
  box-sizing: border-box;
  /* Ensure padding doesn't cause overflow */
}

.text-field-label {
  pointer-events: none;
  position: absolute;
  left: 1rem;
  top: 50%;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: rgb(255 248 246 / var(--tw-bg-opacity, 1));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (prefers-color-scheme: dark) {
  .text-field-label {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.text-field-label {
  /* Label floats up when input is focused or has content, remaining left-aligned */
}

.peer:focus ~ .text-field-label {
  top: 0px;
  --tw-translate-y: -50%;
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .peer:focus ~ .text-field-label {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }
}

.peer:not(:-moz-placeholder-shown) ~ .text-field-label {
  top: 0px;
  --tw-translate-y: -50%;
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
}

.peer:not(:placeholder-shown) ~ .text-field-label {
  top: 0px;
  --tw-translate-y: -50%;
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .peer:not(:-moz-placeholder-shown) ~ .text-field-label {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }
  .peer:not(:placeholder-shown) ~ .text-field-label {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }
}

.text-field-input:focus {
  --tw-border-opacity: 1;
  border-color: rgb(185 94 32 / var(--tw-border-opacity, 1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (prefers-color-scheme: dark) {
  .text-field-input:focus {
    --tw-border-opacity: 1;
    border-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
  }
}

.section-header-title {
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .section-header-title {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.task-item {
  box-sizing: border-box;
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: space-between;
  border-radius: 8px;
  border-width: 1px;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 0.75rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (prefers-color-scheme: dark) {
  .task-item {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.task-item {
  /* Simulating state layer with opacity */
}

.task-item:hover {
  --tw-bg-opacity: 0.8;
}

@media (prefers-color-scheme: dark) {
  .task-item:hover {
    --tw-bg-opacity: 0.8;
  }
}

.task-item span {
  flex: 1 1 0%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .task-item span {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.task-item.active {
  --tw-bg-opacity: 1;
  background-color: rgb(255 219 202 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(58 24 0 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .task-item.active {
    --tw-bg-opacity: 1;
    background-color: rgb(124 45 3 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(255 237 213 / var(--tw-text-opacity, 1));
  }
}

.task-item .delete-button {
  /* Mobile first: visible, larger tap target */
  position: relative;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-style: none;
  background-color: transparent;
  padding: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
  opacity: 0;
  transition-property: opacity;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
}

@media (prefers-color-scheme: dark) {
  .task-item .delete-button {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.task-item .delete-button {
  /* Desktop overrides: hidden by default, aim for ~40px clickable area, icon ~20px */
  border-radius: 8px
}

@media (min-width: 768px) {
  .task-item .delete-button {
    height: 2.5rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    opacity: 0;
  }
}

.task-item .delete-button {
  /* Larger: 40px container, 8px padding -> 24px icon space */
  /* Add state layer effect using ::before, inherited from the concept of .btn but defined here */
  &::before {
    content: '';
  }
  &::before {
    position: absolute;
  }
  &::before {
    inset: 0px;
  }
  &::before {
    border-radius: 8px;
  }
  &::before {
    background-color: currentColor;
  }
  &::before {
    opacity: 0;
  }
  &::before {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &::before {
    transition-duration: 200ms;
  }
  &::before {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  &::before {
    /* Apply rounded corners to the pseudo-element as well */
  }
  &:hover::before {
    opacity: 0.1;
  }
  &:active::before {
    opacity: 0.2;
  }
}

.task-item .delete-button .material-symbols-rounded {
  font-size: 1.25rem;
  line-height: 1.75rem;
  /* Explicitly 24px, can be 20px if preferred via text-lg */
}

.task-item:hover .delete-button {
  opacity: 1;
}

.metric-item-container {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .metric-item-container {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

/* For the progress bar, JS will need to set the width via style="width: var(--progress)" on this element */

.metric-item-progress-bar {
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: 0;
  height: 100%;
  opacity: 0.1;
  transition: width 0.3s ease-in-out;
  background-color: var(--bar-color, #B95E20);
  width: var(--progress, 0%);
}

.metric-item-content {
  position: relative;
  z-index: 10;
}

.log-entry {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 0.625rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .log-entry {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.log-entry .material-symbols-rounded {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.task-chip {
  position: relative;
  box-sizing: border-box;
  display: inline-flex;
  height: 2rem;
  flex: none;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  gap: 0.5rem;
  overflow: visible;
  white-space: nowrap;
  border-radius: 8px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(133 116 107 / var(--tw-border-opacity, 1));
  background-color: transparent;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
  outline: 2px solid transparent;
  outline-offset: 2px;
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (prefers-color-scheme: dark) {
  .task-chip {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.task-chip:hover {
  --tw-border-opacity: 1;
  border-color: rgb(32 26 24 / var(--tw-border-opacity, 1));
  opacity: 0.9;
}

@media (prefers-color-scheme: dark) {
  .task-chip:hover {
    --tw-border-opacity: 1;
    border-color: rgb(243 244 246 / var(--tw-border-opacity, 1));
  }
}

.task-chip.active {
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: rgb(255 219 202 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(44 22 10 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .task-chip.active {
    --tw-bg-opacity: 1;
    background-color: rgb(255 219 202 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(44 22 10 / var(--tw-text-opacity, 1));
  }
}

.task-chip .chip-content {
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: flex-start;
  gap: 0.5rem;
}

.task-chip .chip-text {
  line-height: 1;
  /* Try to align text better with icons */
}

.task-chip .material-symbols-rounded {
  /* Make icon size match chip text size for better alignment */
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1;
}

.task-chip .check-icon {
  margin-left: auto;
}

.fullscreen-mode {
  display: none;
  /* Default to hidden */
}

.fullscreen-mode.active {
  display: flex;
  /* Or 'block', depending on desired layout. 'flex' was on the HTML element */
}

.notification-status {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .notification-status {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.notification-status .material-symbols-rounded {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.notification-status a {
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
  text-decoration-line: none;
}

.notification-status a:hover {
  text-decoration-line: underline;
}

@media (prefers-color-scheme: dark) {
  .notification-status a {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }
}

.notification-status.warning {
  --tw-bg-opacity: 1;
  background-color: rgb(249 222 220 / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: rgb(65 14 11 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .notification-status.warning {
    --tw-bg-opacity: 1;
    background-color: rgb(127 29 29 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(65 14 11 / var(--tw-text-opacity, 1));
  }
}

/* Example for no-data-message if needed for specific styling */

/* .no-data-message {
    @apply text-center text-on-surface-variant dark:text-on-surface-variant-dark py-4 text-sm;
  } */

/* Collapsible section styles */

/* Heatmap Section */

#heatmapSection.collapsed .heatmap-scroll-container {
  height: 0px;
  opacity: 0;
}

#heatmapSection .btn-toggle-expand .material-symbols-rounded {
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  /* Ensure transition is applied */
}

#heatmapSection.collapsed .btn-toggle-expand .material-symbols-rounded {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

/* History Log Section */

#historySection #log-scroll-container {
  max-height: 800px;
  overflow: hidden;
  transition: max-height 0.5s ease-in-out, opacity 0.2s ease-out;
}

#historySection.collapsed #log-scroll-container {
  max-height: 0px;
  opacity: 0;
  /* Opacity can still transition if transition-all was on parent, or add transition-opacity here if needed */
  /* For smoother collapse, ensure padding/margin also transition or are removed */
  margin: 0px;
  padding: 0px;
  /* Apply p-0 and m-0 for Tailwind equivalent of padding:0 and margin:0 */
}

#historySection.collapsed #log-scroll-container #historyLog {
  margin-top: 0px;
}

#historySection .btn-toggle-expand .material-symbols-rounded {
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  /* Ensure transition is applied */
}

#historySection.collapsed .btn-toggle-expand .material-symbols-rounded {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.section-header {
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.setting-item {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  border-radius: 8px;
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
  padding: 1rem;
}

@media (prefers-color-scheme: dark) {
  .setting-item {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
  }
}

.setting-item-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.75rem;
}

.time-input {
  display: grid;
  max-width: 200px;
  grid-template-columns: auto 1fr;
  align-items: center;
  gap: 0.5rem;
}

.time-input input {
  width: 100%;
  max-width: 72px;
  border-radius: 8px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(133 116 107 / var(--tw-border-opacity, 1));
  background-color: transparent;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

.time-input input:focus {
  --tw-border-opacity: 1;
  border-color: rgb(185 94 32 / var(--tw-border-opacity, 1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (prefers-color-scheme: dark) {
  .time-input input {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }

  .time-input input:focus {
    --tw-border-opacity: 1;
    border-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
  }
}

.time-input .unit {
  min-width: 32px;
  white-space: nowrap;
  padding-left: 0.25rem;
  text-align: left;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .time-input .unit {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

/* Migrate inline-notification styles */

.inline-notification {
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  z-index: 1000;
  display: flex;
  min-width: 280px;
  max-width: 28rem;
  align-items: flex-start;
  gap: 0.75rem;
  border-radius: 12px;
  --tw-bg-opacity: 1;
  background-color: rgb(255 248 246 / var(--tw-bg-opacity, 1));
  padding: 1rem;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (prefers-color-scheme: dark) {
  .inline-notification {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.inline-notification {
  animation: slide-in 0.3s ease-out;
}

.inline-notification.fade-out {
  animation: fade-out 0.3s ease-out forwards;
}

.inline-notification .material-symbols-rounded {
  font-size: 1.5rem;
  line-height: 2rem;
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .inline-notification .material-symbols-rounded {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }
}

.inline-notification .notification-content {
  flex: 1 1 0%;
}

.inline-notification .notification-content strong {
  margin-bottom: 0.25rem;
  display: block;
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .inline-notification .notification-content strong {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }
}

.inline-notification .notification-content p {
  margin: 0px;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

@media (prefers-color-scheme: dark) {
  .inline-notification .notification-content p {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.bottom-6 {
  bottom: 1.5rem;
}

.bottom-8 {
  bottom: 2rem;
}

.bottom-\[120px\] {
  bottom: 120px;
}

.left-12 {
  left: 3rem;
}

.left-\[48px\] {
  left: 48px;
}

.right-0 {
  right: 0px;
}

.right-6 {
  right: 1.5rem;
}

.top-6 {
  top: 1.5rem;
}

.z-\[1000\] {
  z-index: 1000;
}

.z-\[1001\] {
  z-index: 1001;
}

.m-0 {
  margin: 0px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-0 {
  margin-bottom: 0px;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mt-14 {
  margin-top: 3.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-0 {
  height: 0px;
}

.h-10 {
  height: 2.5rem;
}

.h-8 {
  height: 2rem;
}

.h-\[240px\] {
  height: 240px;
}

.h-\[300px\] {
  height: 300px;
}

.h-full {
  height: 100%;
}

.max-h-\[300px\] {
  max-height: 300px;
}

.max-h-\[480px\] {
  max-height: 480px;
}

.max-h-\[800px\] {
  max-height: 800px;
}

.min-h-\[200px\] {
  min-height: 200px;
}

.min-h-\[400px\] {
  min-height: 400px;
}

.w-0 {
  width: 0px;
}

.w-10 {
  width: 2.5rem;
}

.w-\[52px\] {
  width: 52px;
}

.w-full {
  width: 100%;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-\[140px\] {
  min-width: 140px;
}

.min-w-\[280px\] {
  min-width: 280px;
}

.min-w-\[32px\] {
  min-width: 32px;
}

.min-w-\[800px\] {
  min-width: 800px;
}

.max-w-6xl {
  max-width: 72rem;
}

.max-w-\[1200px\] {
  max-width: 1200px;
}

.max-w-\[200px\] {
  max-width: 200px;
}

.max-w-\[72px\] {
  max-width: 72px;
}

.max-w-md {
  max-width: 28rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.shrink-0 {
  flex-shrink: 0;
}

.cursor-pointer {
  cursor: pointer;
}

.resize {
  resize: both;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-\[auto_1fr\] {
  grid-template-columns: auto 1fr;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-stretch {
  align-items: stretch;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md-medium {
  border-radius: 12px;
}

.rounded-md-small {
  border-radius: 8px;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-outline {
  --tw-border-opacity: 1;
  border-color: rgb(133 116 107 / var(--tw-border-opacity, 1));
}

.bg-surface {
  --tw-bg-opacity: 1;
  background-color: rgb(255 248 246 / var(--tw-bg-opacity, 1));
}

.bg-surface-variant {
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
}

.bg-transparent {
  background-color: transparent;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pl-1 {
  padding-left: 0.25rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.font-display {
  font-family: Google Sans Display, system-ui, sans-serif;
}

.font-sans {
  font-family: Google Sans Text, system-ui, sans-serif;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-9xl {
  font-size: 8rem;
  line-height: 1;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.leading-none {
  line-height: 1;
}

.tracking-\[0\.05em\] {
  letter-spacing: 0.05em;
}

.tracking-tighter {
  letter-spacing: -0.025em;
}

.text-on-surface {
  --tw-text-opacity: 1;
  color: rgb(32 26 24 / var(--tw-text-opacity, 1));
}

.text-on-surface-variant {
  --tw-text-opacity: 1;
  color: rgb(82 68 61 / var(--tw-text-opacity, 1));
}

.text-on-surface-variant-dark {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity, 1));
}

.text-primary {
  --tw-text-opacity: 1;
  color: rgb(185 94 32 / var(--tw-text-opacity, 1));
}

.opacity-0 {
  opacity: 0;
}

.opacity-100 {
  opacity: 1;
}

.opacity-90 {
  opacity: 0.9;
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Custom utility for scrollbar */

.dark .scrollbar-custom::-webkit-scrollbar-track {
  background: #374151;
}

.dark .scrollbar-custom::-webkit-scrollbar-thumb {
  background: #4B5563;
}

.dark .scrollbar-custom::-webkit-scrollbar-thumb:hover {
  background: #F97316;
}

/* Add keyframes for animations */

@keyframes slide-in {
  from {
    transform: translateX(100%);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    transform: translateX(0);
    opacity: 1;
  }

  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:bottom-1\.5::before {
  content: var(--tw-content);
  bottom: 0.375rem;
}

.before\:left-1\.5::before {
  content: var(--tw-content);
  left: 0.375rem;
}

.before\:h-4::before {
  content: var(--tw-content);
  height: 1rem;
}

.before\:w-4::before {
  content: var(--tw-content);
  width: 1rem;
}

.before\:rounded-full::before {
  content: var(--tw-content);
  border-radius: 9999px;
}

.before\:bg-outline::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(133 116 107 / var(--tw-bg-opacity, 1));
}

.before\:transition-all::before {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.before\:duration-200::before {
  content: var(--tw-content);
  transition-duration: 200ms;
}

.before\:ease-in-out::before {
  content: var(--tw-content);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.before\:content-\[\'\'\]::before {
  --tw-content: '';
  content: var(--tw-content);
}

.hover\:bg-surface-variant:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(244 222 212 / var(--tw-bg-opacity, 1));
}

.focus\:border-primary:focus {
  --tw-border-opacity: 1;
  border-color: rgb(185 94 32 / var(--tw-border-opacity, 1));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.peer:checked ~ .peer-checked\:border-primary {
  --tw-border-opacity: 1;
  border-color: rgb(185 94 32 / var(--tw-border-opacity, 1));
}

.peer:checked ~ .peer-checked\:bg-primary-container {
  --tw-bg-opacity: 1;
  background-color: rgb(255 219 202 / var(--tw-bg-opacity, 1));
}

.peer:checked ~ .peer-checked\:before\:translate-x-5::before {
  content: var(--tw-content);
  --tw-translate-x: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:before\:bg-primary::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(185 94 32 / var(--tw-bg-opacity, 1));
}

@media (min-width: 768px) {
  .md\:w-auto {
    width: auto;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-center {
    align-items: center;
  }
}

@media (prefers-color-scheme: dark) {
  .dark\:border-outline-dark {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
  }

  .dark\:bg-surface-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-surface-variant-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
  }

  .dark\:text-on-surface-dark {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity, 1));
  }

  .dark\:text-on-surface-variant-dark {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }

  .dark\:text-primary-dark {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity, 1));
  }

  .dark\:before\:bg-outline-dark::before {
    content: var(--tw-content);
    --tw-bg-opacity: 1;
    background-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));
  }

  .dark\:hover\:bg-surface-variant-dark:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
  }

  .dark\:focus\:border-primary-dark:focus {
    --tw-border-opacity: 1;
    border-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
  }

  .peer:checked ~ .dark\:peer-checked\:border-primary-dark {
    --tw-border-opacity: 1;
    border-color: rgb(249 115 22 / var(--tw-border-opacity, 1));
  }

  .peer:checked ~ .dark\:peer-checked\:bg-primary-container-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(124 45 3 / var(--tw-bg-opacity, 1));
  }

  .peer:checked ~ .dark\:peer-checked\:before\:bg-primary-dark::before {
    content: var(--tw-content);
    --tw-bg-opacity: 1;
    background-color: rgb(249 115 22 / var(--tw-bg-opacity, 1));
  }
} 